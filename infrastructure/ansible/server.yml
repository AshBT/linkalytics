---
- hosts: all
  tasks:
    - name: Create disque node groups
      group_by: key={{ ansible_hostname | regex_replace('-[\d]+', '')}}

- hosts: disque-*
  roles:
    - disque

- hosts: disque-0
  tasks:
    - name: Configure disque cluster meets
      command: disque cluster meet {{ hostvars[item].ansible_eth0.ipv4.address }} 7711
      with_items: "{{ groups.disque }}"
      when: "'disque' in item and item != 'disque-0'"

- hosts: dqworker-*
  roles:
    - worker

- hosts: linkalytics
  handlers:
    - name: Restart server
      supervisorctl: name=server state=restarted
  tasks:
    - name: Install git
      apt: pkg=git state=installed update_cache=true

    - name: Install python3
      apt: pkg=python3 state=installed update_cache=true

    - name: Install pip3
      apt: pkg=python3-pip state=installed update_cache=true

    - name: Install pandas
      apt: pkg=python3-pandas state=installed update_cache=true

    - name: Install scipy
      apt: pkg=python3-scipy state=installed update_cache=true

    - name: Install supervisord
      apt: pkg=supervisor state=installed update_cache=true

    - name: Copy supervisor configuration
      copy: src=supervisor/templates/server.conf dest=/etc/supervisor/conf.d/server.conf
      notify:
        - Restart server

    - name: Enable supervisord
      service: name=supervisor enabled=yes

    - name: Start supervisord
      service: name=supervisor state=started

    - name: Assure existence of app directory
      file: path=/home/ansible/app/ state=directory

    - name: Copy requirements
      copy: src=../../requirements.txt dest=/home/ansible/app/requirements.txt

    - name: Copy manager
      copy: src=../../manage.py dest=/home/ansible/manage.py

    - name: Copy server
      synchronize: src=../../src/ dest=/home/ansible/app/
      notify:
        - Restart server

    - name: Install dependencies
      pip: requirements=/home/ansible/app/requirements.txt executable=pip3

    - name: Start server
      supervisorctl: name=server state=started
